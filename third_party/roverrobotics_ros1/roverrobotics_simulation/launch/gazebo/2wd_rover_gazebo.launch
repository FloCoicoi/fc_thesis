<launch>
  <arg name="config" default="4WD_Rover_with_SLAM_Pack" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find roverrobotics_description)/scripts/env_run
                    $(find roverrobotics_description)/urdf/configs/$(arg config)
                    $(find xacro)/xacro '$(find roverrobotics_description)/urdf/2WD_Rover/2WD_rover.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model 2WD_rover -param robot_description"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
</launch>